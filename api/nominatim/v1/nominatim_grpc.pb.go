// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: nominatim/v1/nominatim.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	NominatimService_Search_FullMethodName    = "/nominatim.v1.NominatimService/Search"
	NominatimService_Reverse_FullMethodName   = "/nominatim.v1.NominatimService/Reverse"
	NominatimService_Lookup_FullMethodName    = "/nominatim.v1.NominatimService/Lookup"
	NominatimService_Status_FullMethodName    = "/nominatim.v1.NominatimService/Status"
	NominatimService_Details_FullMethodName   = "/nominatim.v1.NominatimService/Details"
	NominatimService_Deletable_FullMethodName = "/nominatim.v1.NominatimService/Deletable"
	NominatimService_Polygons_FullMethodName  = "/nominatim.v1.NominatimService/Polygons"
)

// NominatimServiceClient is the client API for NominatimService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Nominatim 服务定义
type NominatimServiceClient interface {
	// 名称/地址/类型搜索
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	// 逆地理编码：经纬度到地点
	Reverse(ctx context.Context, in *ReverseRequest, opts ...grpc.CallOption) (*ReverseResponse, error)
	// 依据 OSM ID 批量查询
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error)
	// 服务状态
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// 对象详情（调试用）
	Details(ctx context.Context, in *DetailsRequest, opts ...grpc.CallOption) (*DetailsResponse, error)
	// 可删除对象列表（维护用途）
	Deletable(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*DeletableResponse, error)
	// 问题多边形列表（维护用途）
	Polygons(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*PolygonsResponse, error)
}

type nominatimServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNominatimServiceClient(cc grpc.ClientConnInterface) NominatimServiceClient {
	return &nominatimServiceClient{cc}
}

func (c *nominatimServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, NominatimService_Search_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nominatimServiceClient) Reverse(ctx context.Context, in *ReverseRequest, opts ...grpc.CallOption) (*ReverseResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ReverseResponse)
	err := c.cc.Invoke(ctx, NominatimService_Reverse_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nominatimServiceClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LookupResponse)
	err := c.cc.Invoke(ctx, NominatimService_Lookup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nominatimServiceClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, NominatimService_Status_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nominatimServiceClient) Details(ctx context.Context, in *DetailsRequest, opts ...grpc.CallOption) (*DetailsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DetailsResponse)
	err := c.cc.Invoke(ctx, NominatimService_Details_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nominatimServiceClient) Deletable(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*DeletableResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeletableResponse)
	err := c.cc.Invoke(ctx, NominatimService_Deletable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nominatimServiceClient) Polygons(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*PolygonsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PolygonsResponse)
	err := c.cc.Invoke(ctx, NominatimService_Polygons_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NominatimServiceServer is the server API for NominatimService service.
// All implementations must embed UnimplementedNominatimServiceServer
// for forward compatibility.
//
// Nominatim 服务定义
type NominatimServiceServer interface {
	// 名称/地址/类型搜索
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	// 逆地理编码：经纬度到地点
	Reverse(context.Context, *ReverseRequest) (*ReverseResponse, error)
	// 依据 OSM ID 批量查询
	Lookup(context.Context, *LookupRequest) (*LookupResponse, error)
	// 服务状态
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
	// 对象详情（调试用）
	Details(context.Context, *DetailsRequest) (*DetailsResponse, error)
	// 可删除对象列表（维护用途）
	Deletable(context.Context, *emptypb.Empty) (*DeletableResponse, error)
	// 问题多边形列表（维护用途）
	Polygons(context.Context, *emptypb.Empty) (*PolygonsResponse, error)
	mustEmbedUnimplementedNominatimServiceServer()
}

// UnimplementedNominatimServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedNominatimServiceServer struct{}

func (UnimplementedNominatimServiceServer) Search(context.Context, *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (UnimplementedNominatimServiceServer) Reverse(context.Context, *ReverseRequest) (*ReverseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reverse not implemented")
}
func (UnimplementedNominatimServiceServer) Lookup(context.Context, *LookupRequest) (*LookupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lookup not implemented")
}
func (UnimplementedNominatimServiceServer) Status(context.Context, *StatusRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (UnimplementedNominatimServiceServer) Details(context.Context, *DetailsRequest) (*DetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Details not implemented")
}
func (UnimplementedNominatimServiceServer) Deletable(context.Context, *emptypb.Empty) (*DeletableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deletable not implemented")
}
func (UnimplementedNominatimServiceServer) Polygons(context.Context, *emptypb.Empty) (*PolygonsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Polygons not implemented")
}
func (UnimplementedNominatimServiceServer) mustEmbedUnimplementedNominatimServiceServer() {}
func (UnimplementedNominatimServiceServer) testEmbeddedByValue()                          {}

// UnsafeNominatimServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NominatimServiceServer will
// result in compilation errors.
type UnsafeNominatimServiceServer interface {
	mustEmbedUnimplementedNominatimServiceServer()
}

func RegisterNominatimServiceServer(s grpc.ServiceRegistrar, srv NominatimServiceServer) {
	// If the following call pancis, it indicates UnimplementedNominatimServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&NominatimService_ServiceDesc, srv)
}

func _NominatimService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NominatimServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NominatimService_Search_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NominatimServiceServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NominatimService_Reverse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReverseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NominatimServiceServer).Reverse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NominatimService_Reverse_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NominatimServiceServer).Reverse(ctx, req.(*ReverseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NominatimService_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NominatimServiceServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NominatimService_Lookup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NominatimServiceServer).Lookup(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NominatimService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NominatimServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NominatimService_Status_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NominatimServiceServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NominatimService_Details_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NominatimServiceServer).Details(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NominatimService_Details_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NominatimServiceServer).Details(ctx, req.(*DetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NominatimService_Deletable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NominatimServiceServer).Deletable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NominatimService_Deletable_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NominatimServiceServer).Deletable(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _NominatimService_Polygons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NominatimServiceServer).Polygons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NominatimService_Polygons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NominatimServiceServer).Polygons(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// NominatimService_ServiceDesc is the grpc.ServiceDesc for NominatimService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NominatimService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "nominatim.v1.NominatimService",
	HandlerType: (*NominatimServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _NominatimService_Search_Handler,
		},
		{
			MethodName: "Reverse",
			Handler:    _NominatimService_Reverse_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _NominatimService_Lookup_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _NominatimService_Status_Handler,
		},
		{
			MethodName: "Details",
			Handler:    _NominatimService_Details_Handler,
		},
		{
			MethodName: "Deletable",
			Handler:    _NominatimService_Deletable_Handler,
		},
		{
			MethodName: "Polygons",
			Handler:    _NominatimService_Polygons_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nominatim/v1/nominatim.proto",
}
