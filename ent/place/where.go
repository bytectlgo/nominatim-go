// Code generated by ent, DO NOT EDIT.

package place

import (
	"nominatim-go/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldUpdatedAt, v))
}

// PlaceID applies equality check predicate on the "place_id" field. It's identical to PlaceIDEQ.
func PlaceID(v int64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldPlaceID, v))
}

// Licence applies equality check predicate on the "licence" field. It's identical to LicenceEQ.
func Licence(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldLicence, v))
}

// OsmID applies equality check predicate on the "osm_id" field. It's identical to OsmIDEQ.
func OsmID(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldOsmID, v))
}

// OsmType applies equality check predicate on the "osm_type" field. It's identical to OsmTypeEQ.
func OsmType(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldOsmType, v))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldCategory, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldType, v))
}

// Importance applies equality check predicate on the "importance" field. It's identical to ImportanceEQ.
func Importance(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldImportance, v))
}

// DisplayName applies equality check predicate on the "display_name" field. It's identical to DisplayNameEQ.
func DisplayName(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldDisplayName, v))
}

// Lat applies equality check predicate on the "lat" field. It's identical to LatEQ.
func Lat(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldLat, v))
}

// Lon applies equality check predicate on the "lon" field. It's identical to LonEQ.
func Lon(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldLon, v))
}

// BboxSouth applies equality check predicate on the "bbox_south" field. It's identical to BboxSouthEQ.
func BboxSouth(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldBboxSouth, v))
}

// BboxNorth applies equality check predicate on the "bbox_north" field. It's identical to BboxNorthEQ.
func BboxNorth(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldBboxNorth, v))
}

// BboxWest applies equality check predicate on the "bbox_west" field. It's identical to BboxWestEQ.
func BboxWest(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldBboxWest, v))
}

// BboxEast applies equality check predicate on the "bbox_east" field. It's identical to BboxEastEQ.
func BboxEast(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldBboxEast, v))
}

// Icon applies equality check predicate on the "icon" field. It's identical to IconEQ.
func Icon(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldIcon, v))
}

// PolygonGeojson applies equality check predicate on the "polygon_geojson" field. It's identical to PolygonGeojsonEQ.
func PolygonGeojson(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldPolygonGeojson, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldUpdatedAt, v))
}

// PlaceIDEQ applies the EQ predicate on the "place_id" field.
func PlaceIDEQ(v int64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldPlaceID, v))
}

// PlaceIDNEQ applies the NEQ predicate on the "place_id" field.
func PlaceIDNEQ(v int64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldPlaceID, v))
}

// PlaceIDIn applies the In predicate on the "place_id" field.
func PlaceIDIn(vs ...int64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldPlaceID, vs...))
}

// PlaceIDNotIn applies the NotIn predicate on the "place_id" field.
func PlaceIDNotIn(vs ...int64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldPlaceID, vs...))
}

// PlaceIDGT applies the GT predicate on the "place_id" field.
func PlaceIDGT(v int64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldPlaceID, v))
}

// PlaceIDGTE applies the GTE predicate on the "place_id" field.
func PlaceIDGTE(v int64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldPlaceID, v))
}

// PlaceIDLT applies the LT predicate on the "place_id" field.
func PlaceIDLT(v int64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldPlaceID, v))
}

// PlaceIDLTE applies the LTE predicate on the "place_id" field.
func PlaceIDLTE(v int64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldPlaceID, v))
}

// LicenceEQ applies the EQ predicate on the "licence" field.
func LicenceEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldLicence, v))
}

// LicenceNEQ applies the NEQ predicate on the "licence" field.
func LicenceNEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldLicence, v))
}

// LicenceIn applies the In predicate on the "licence" field.
func LicenceIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldLicence, vs...))
}

// LicenceNotIn applies the NotIn predicate on the "licence" field.
func LicenceNotIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldLicence, vs...))
}

// LicenceGT applies the GT predicate on the "licence" field.
func LicenceGT(v string) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldLicence, v))
}

// LicenceGTE applies the GTE predicate on the "licence" field.
func LicenceGTE(v string) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldLicence, v))
}

// LicenceLT applies the LT predicate on the "licence" field.
func LicenceLT(v string) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldLicence, v))
}

// LicenceLTE applies the LTE predicate on the "licence" field.
func LicenceLTE(v string) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldLicence, v))
}

// LicenceContains applies the Contains predicate on the "licence" field.
func LicenceContains(v string) predicate.Place {
	return predicate.Place(sql.FieldContains(FieldLicence, v))
}

// LicenceHasPrefix applies the HasPrefix predicate on the "licence" field.
func LicenceHasPrefix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasPrefix(FieldLicence, v))
}

// LicenceHasSuffix applies the HasSuffix predicate on the "licence" field.
func LicenceHasSuffix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasSuffix(FieldLicence, v))
}

// LicenceIsNil applies the IsNil predicate on the "licence" field.
func LicenceIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldLicence))
}

// LicenceNotNil applies the NotNil predicate on the "licence" field.
func LicenceNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldLicence))
}

// LicenceEqualFold applies the EqualFold predicate on the "licence" field.
func LicenceEqualFold(v string) predicate.Place {
	return predicate.Place(sql.FieldEqualFold(FieldLicence, v))
}

// LicenceContainsFold applies the ContainsFold predicate on the "licence" field.
func LicenceContainsFold(v string) predicate.Place {
	return predicate.Place(sql.FieldContainsFold(FieldLicence, v))
}

// OsmIDEQ applies the EQ predicate on the "osm_id" field.
func OsmIDEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldOsmID, v))
}

// OsmIDNEQ applies the NEQ predicate on the "osm_id" field.
func OsmIDNEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldOsmID, v))
}

// OsmIDIn applies the In predicate on the "osm_id" field.
func OsmIDIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldOsmID, vs...))
}

// OsmIDNotIn applies the NotIn predicate on the "osm_id" field.
func OsmIDNotIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldOsmID, vs...))
}

// OsmIDGT applies the GT predicate on the "osm_id" field.
func OsmIDGT(v string) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldOsmID, v))
}

// OsmIDGTE applies the GTE predicate on the "osm_id" field.
func OsmIDGTE(v string) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldOsmID, v))
}

// OsmIDLT applies the LT predicate on the "osm_id" field.
func OsmIDLT(v string) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldOsmID, v))
}

// OsmIDLTE applies the LTE predicate on the "osm_id" field.
func OsmIDLTE(v string) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldOsmID, v))
}

// OsmIDContains applies the Contains predicate on the "osm_id" field.
func OsmIDContains(v string) predicate.Place {
	return predicate.Place(sql.FieldContains(FieldOsmID, v))
}

// OsmIDHasPrefix applies the HasPrefix predicate on the "osm_id" field.
func OsmIDHasPrefix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasPrefix(FieldOsmID, v))
}

// OsmIDHasSuffix applies the HasSuffix predicate on the "osm_id" field.
func OsmIDHasSuffix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasSuffix(FieldOsmID, v))
}

// OsmIDEqualFold applies the EqualFold predicate on the "osm_id" field.
func OsmIDEqualFold(v string) predicate.Place {
	return predicate.Place(sql.FieldEqualFold(FieldOsmID, v))
}

// OsmIDContainsFold applies the ContainsFold predicate on the "osm_id" field.
func OsmIDContainsFold(v string) predicate.Place {
	return predicate.Place(sql.FieldContainsFold(FieldOsmID, v))
}

// OsmTypeEQ applies the EQ predicate on the "osm_type" field.
func OsmTypeEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldOsmType, v))
}

// OsmTypeNEQ applies the NEQ predicate on the "osm_type" field.
func OsmTypeNEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldOsmType, v))
}

// OsmTypeIn applies the In predicate on the "osm_type" field.
func OsmTypeIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldOsmType, vs...))
}

// OsmTypeNotIn applies the NotIn predicate on the "osm_type" field.
func OsmTypeNotIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldOsmType, vs...))
}

// OsmTypeGT applies the GT predicate on the "osm_type" field.
func OsmTypeGT(v string) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldOsmType, v))
}

// OsmTypeGTE applies the GTE predicate on the "osm_type" field.
func OsmTypeGTE(v string) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldOsmType, v))
}

// OsmTypeLT applies the LT predicate on the "osm_type" field.
func OsmTypeLT(v string) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldOsmType, v))
}

// OsmTypeLTE applies the LTE predicate on the "osm_type" field.
func OsmTypeLTE(v string) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldOsmType, v))
}

// OsmTypeContains applies the Contains predicate on the "osm_type" field.
func OsmTypeContains(v string) predicate.Place {
	return predicate.Place(sql.FieldContains(FieldOsmType, v))
}

// OsmTypeHasPrefix applies the HasPrefix predicate on the "osm_type" field.
func OsmTypeHasPrefix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasPrefix(FieldOsmType, v))
}

// OsmTypeHasSuffix applies the HasSuffix predicate on the "osm_type" field.
func OsmTypeHasSuffix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasSuffix(FieldOsmType, v))
}

// OsmTypeEqualFold applies the EqualFold predicate on the "osm_type" field.
func OsmTypeEqualFold(v string) predicate.Place {
	return predicate.Place(sql.FieldEqualFold(FieldOsmType, v))
}

// OsmTypeContainsFold applies the ContainsFold predicate on the "osm_type" field.
func OsmTypeContainsFold(v string) predicate.Place {
	return predicate.Place(sql.FieldContainsFold(FieldOsmType, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldCategory, v))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldCategory, v))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldCategory, vs...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldCategory, vs...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v string) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldCategory, v))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v string) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldCategory, v))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v string) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldCategory, v))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v string) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldCategory, v))
}

// CategoryContains applies the Contains predicate on the "category" field.
func CategoryContains(v string) predicate.Place {
	return predicate.Place(sql.FieldContains(FieldCategory, v))
}

// CategoryHasPrefix applies the HasPrefix predicate on the "category" field.
func CategoryHasPrefix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasPrefix(FieldCategory, v))
}

// CategoryHasSuffix applies the HasSuffix predicate on the "category" field.
func CategoryHasSuffix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasSuffix(FieldCategory, v))
}

// CategoryIsNil applies the IsNil predicate on the "category" field.
func CategoryIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldCategory))
}

// CategoryNotNil applies the NotNil predicate on the "category" field.
func CategoryNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldCategory))
}

// CategoryEqualFold applies the EqualFold predicate on the "category" field.
func CategoryEqualFold(v string) predicate.Place {
	return predicate.Place(sql.FieldEqualFold(FieldCategory, v))
}

// CategoryContainsFold applies the ContainsFold predicate on the "category" field.
func CategoryContainsFold(v string) predicate.Place {
	return predicate.Place(sql.FieldContainsFold(FieldCategory, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.Place {
	return predicate.Place(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasSuffix(FieldType, v))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldType))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.Place {
	return predicate.Place(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.Place {
	return predicate.Place(sql.FieldContainsFold(FieldType, v))
}

// ImportanceEQ applies the EQ predicate on the "importance" field.
func ImportanceEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldImportance, v))
}

// ImportanceNEQ applies the NEQ predicate on the "importance" field.
func ImportanceNEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldImportance, v))
}

// ImportanceIn applies the In predicate on the "importance" field.
func ImportanceIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldImportance, vs...))
}

// ImportanceNotIn applies the NotIn predicate on the "importance" field.
func ImportanceNotIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldImportance, vs...))
}

// ImportanceGT applies the GT predicate on the "importance" field.
func ImportanceGT(v float64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldImportance, v))
}

// ImportanceGTE applies the GTE predicate on the "importance" field.
func ImportanceGTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldImportance, v))
}

// ImportanceLT applies the LT predicate on the "importance" field.
func ImportanceLT(v float64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldImportance, v))
}

// ImportanceLTE applies the LTE predicate on the "importance" field.
func ImportanceLTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldImportance, v))
}

// ImportanceIsNil applies the IsNil predicate on the "importance" field.
func ImportanceIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldImportance))
}

// ImportanceNotNil applies the NotNil predicate on the "importance" field.
func ImportanceNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldImportance))
}

// DisplayNameEQ applies the EQ predicate on the "display_name" field.
func DisplayNameEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldDisplayName, v))
}

// DisplayNameNEQ applies the NEQ predicate on the "display_name" field.
func DisplayNameNEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldDisplayName, v))
}

// DisplayNameIn applies the In predicate on the "display_name" field.
func DisplayNameIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldDisplayName, vs...))
}

// DisplayNameNotIn applies the NotIn predicate on the "display_name" field.
func DisplayNameNotIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldDisplayName, vs...))
}

// DisplayNameGT applies the GT predicate on the "display_name" field.
func DisplayNameGT(v string) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldDisplayName, v))
}

// DisplayNameGTE applies the GTE predicate on the "display_name" field.
func DisplayNameGTE(v string) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldDisplayName, v))
}

// DisplayNameLT applies the LT predicate on the "display_name" field.
func DisplayNameLT(v string) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldDisplayName, v))
}

// DisplayNameLTE applies the LTE predicate on the "display_name" field.
func DisplayNameLTE(v string) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldDisplayName, v))
}

// DisplayNameContains applies the Contains predicate on the "display_name" field.
func DisplayNameContains(v string) predicate.Place {
	return predicate.Place(sql.FieldContains(FieldDisplayName, v))
}

// DisplayNameHasPrefix applies the HasPrefix predicate on the "display_name" field.
func DisplayNameHasPrefix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasPrefix(FieldDisplayName, v))
}

// DisplayNameHasSuffix applies the HasSuffix predicate on the "display_name" field.
func DisplayNameHasSuffix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasSuffix(FieldDisplayName, v))
}

// DisplayNameIsNil applies the IsNil predicate on the "display_name" field.
func DisplayNameIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldDisplayName))
}

// DisplayNameNotNil applies the NotNil predicate on the "display_name" field.
func DisplayNameNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldDisplayName))
}

// DisplayNameEqualFold applies the EqualFold predicate on the "display_name" field.
func DisplayNameEqualFold(v string) predicate.Place {
	return predicate.Place(sql.FieldEqualFold(FieldDisplayName, v))
}

// DisplayNameContainsFold applies the ContainsFold predicate on the "display_name" field.
func DisplayNameContainsFold(v string) predicate.Place {
	return predicate.Place(sql.FieldContainsFold(FieldDisplayName, v))
}

// LatEQ applies the EQ predicate on the "lat" field.
func LatEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldLat, v))
}

// LatNEQ applies the NEQ predicate on the "lat" field.
func LatNEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldLat, v))
}

// LatIn applies the In predicate on the "lat" field.
func LatIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldLat, vs...))
}

// LatNotIn applies the NotIn predicate on the "lat" field.
func LatNotIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldLat, vs...))
}

// LatGT applies the GT predicate on the "lat" field.
func LatGT(v float64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldLat, v))
}

// LatGTE applies the GTE predicate on the "lat" field.
func LatGTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldLat, v))
}

// LatLT applies the LT predicate on the "lat" field.
func LatLT(v float64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldLat, v))
}

// LatLTE applies the LTE predicate on the "lat" field.
func LatLTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldLat, v))
}

// LonEQ applies the EQ predicate on the "lon" field.
func LonEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldLon, v))
}

// LonNEQ applies the NEQ predicate on the "lon" field.
func LonNEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldLon, v))
}

// LonIn applies the In predicate on the "lon" field.
func LonIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldLon, vs...))
}

// LonNotIn applies the NotIn predicate on the "lon" field.
func LonNotIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldLon, vs...))
}

// LonGT applies the GT predicate on the "lon" field.
func LonGT(v float64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldLon, v))
}

// LonGTE applies the GTE predicate on the "lon" field.
func LonGTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldLon, v))
}

// LonLT applies the LT predicate on the "lon" field.
func LonLT(v float64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldLon, v))
}

// LonLTE applies the LTE predicate on the "lon" field.
func LonLTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldLon, v))
}

// BboxSouthEQ applies the EQ predicate on the "bbox_south" field.
func BboxSouthEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldBboxSouth, v))
}

// BboxSouthNEQ applies the NEQ predicate on the "bbox_south" field.
func BboxSouthNEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldBboxSouth, v))
}

// BboxSouthIn applies the In predicate on the "bbox_south" field.
func BboxSouthIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldBboxSouth, vs...))
}

// BboxSouthNotIn applies the NotIn predicate on the "bbox_south" field.
func BboxSouthNotIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldBboxSouth, vs...))
}

// BboxSouthGT applies the GT predicate on the "bbox_south" field.
func BboxSouthGT(v float64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldBboxSouth, v))
}

// BboxSouthGTE applies the GTE predicate on the "bbox_south" field.
func BboxSouthGTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldBboxSouth, v))
}

// BboxSouthLT applies the LT predicate on the "bbox_south" field.
func BboxSouthLT(v float64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldBboxSouth, v))
}

// BboxSouthLTE applies the LTE predicate on the "bbox_south" field.
func BboxSouthLTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldBboxSouth, v))
}

// BboxSouthIsNil applies the IsNil predicate on the "bbox_south" field.
func BboxSouthIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldBboxSouth))
}

// BboxSouthNotNil applies the NotNil predicate on the "bbox_south" field.
func BboxSouthNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldBboxSouth))
}

// BboxNorthEQ applies the EQ predicate on the "bbox_north" field.
func BboxNorthEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldBboxNorth, v))
}

// BboxNorthNEQ applies the NEQ predicate on the "bbox_north" field.
func BboxNorthNEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldBboxNorth, v))
}

// BboxNorthIn applies the In predicate on the "bbox_north" field.
func BboxNorthIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldBboxNorth, vs...))
}

// BboxNorthNotIn applies the NotIn predicate on the "bbox_north" field.
func BboxNorthNotIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldBboxNorth, vs...))
}

// BboxNorthGT applies the GT predicate on the "bbox_north" field.
func BboxNorthGT(v float64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldBboxNorth, v))
}

// BboxNorthGTE applies the GTE predicate on the "bbox_north" field.
func BboxNorthGTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldBboxNorth, v))
}

// BboxNorthLT applies the LT predicate on the "bbox_north" field.
func BboxNorthLT(v float64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldBboxNorth, v))
}

// BboxNorthLTE applies the LTE predicate on the "bbox_north" field.
func BboxNorthLTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldBboxNorth, v))
}

// BboxNorthIsNil applies the IsNil predicate on the "bbox_north" field.
func BboxNorthIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldBboxNorth))
}

// BboxNorthNotNil applies the NotNil predicate on the "bbox_north" field.
func BboxNorthNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldBboxNorth))
}

// BboxWestEQ applies the EQ predicate on the "bbox_west" field.
func BboxWestEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldBboxWest, v))
}

// BboxWestNEQ applies the NEQ predicate on the "bbox_west" field.
func BboxWestNEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldBboxWest, v))
}

// BboxWestIn applies the In predicate on the "bbox_west" field.
func BboxWestIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldBboxWest, vs...))
}

// BboxWestNotIn applies the NotIn predicate on the "bbox_west" field.
func BboxWestNotIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldBboxWest, vs...))
}

// BboxWestGT applies the GT predicate on the "bbox_west" field.
func BboxWestGT(v float64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldBboxWest, v))
}

// BboxWestGTE applies the GTE predicate on the "bbox_west" field.
func BboxWestGTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldBboxWest, v))
}

// BboxWestLT applies the LT predicate on the "bbox_west" field.
func BboxWestLT(v float64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldBboxWest, v))
}

// BboxWestLTE applies the LTE predicate on the "bbox_west" field.
func BboxWestLTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldBboxWest, v))
}

// BboxWestIsNil applies the IsNil predicate on the "bbox_west" field.
func BboxWestIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldBboxWest))
}

// BboxWestNotNil applies the NotNil predicate on the "bbox_west" field.
func BboxWestNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldBboxWest))
}

// BboxEastEQ applies the EQ predicate on the "bbox_east" field.
func BboxEastEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldBboxEast, v))
}

// BboxEastNEQ applies the NEQ predicate on the "bbox_east" field.
func BboxEastNEQ(v float64) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldBboxEast, v))
}

// BboxEastIn applies the In predicate on the "bbox_east" field.
func BboxEastIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldBboxEast, vs...))
}

// BboxEastNotIn applies the NotIn predicate on the "bbox_east" field.
func BboxEastNotIn(vs ...float64) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldBboxEast, vs...))
}

// BboxEastGT applies the GT predicate on the "bbox_east" field.
func BboxEastGT(v float64) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldBboxEast, v))
}

// BboxEastGTE applies the GTE predicate on the "bbox_east" field.
func BboxEastGTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldBboxEast, v))
}

// BboxEastLT applies the LT predicate on the "bbox_east" field.
func BboxEastLT(v float64) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldBboxEast, v))
}

// BboxEastLTE applies the LTE predicate on the "bbox_east" field.
func BboxEastLTE(v float64) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldBboxEast, v))
}

// BboxEastIsNil applies the IsNil predicate on the "bbox_east" field.
func BboxEastIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldBboxEast))
}

// BboxEastNotNil applies the NotNil predicate on the "bbox_east" field.
func BboxEastNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldBboxEast))
}

// IconEQ applies the EQ predicate on the "icon" field.
func IconEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldIcon, v))
}

// IconNEQ applies the NEQ predicate on the "icon" field.
func IconNEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldIcon, v))
}

// IconIn applies the In predicate on the "icon" field.
func IconIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldIcon, vs...))
}

// IconNotIn applies the NotIn predicate on the "icon" field.
func IconNotIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldIcon, vs...))
}

// IconGT applies the GT predicate on the "icon" field.
func IconGT(v string) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldIcon, v))
}

// IconGTE applies the GTE predicate on the "icon" field.
func IconGTE(v string) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldIcon, v))
}

// IconLT applies the LT predicate on the "icon" field.
func IconLT(v string) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldIcon, v))
}

// IconLTE applies the LTE predicate on the "icon" field.
func IconLTE(v string) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldIcon, v))
}

// IconContains applies the Contains predicate on the "icon" field.
func IconContains(v string) predicate.Place {
	return predicate.Place(sql.FieldContains(FieldIcon, v))
}

// IconHasPrefix applies the HasPrefix predicate on the "icon" field.
func IconHasPrefix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasPrefix(FieldIcon, v))
}

// IconHasSuffix applies the HasSuffix predicate on the "icon" field.
func IconHasSuffix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasSuffix(FieldIcon, v))
}

// IconIsNil applies the IsNil predicate on the "icon" field.
func IconIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldIcon))
}

// IconNotNil applies the NotNil predicate on the "icon" field.
func IconNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldIcon))
}

// IconEqualFold applies the EqualFold predicate on the "icon" field.
func IconEqualFold(v string) predicate.Place {
	return predicate.Place(sql.FieldEqualFold(FieldIcon, v))
}

// IconContainsFold applies the ContainsFold predicate on the "icon" field.
func IconContainsFold(v string) predicate.Place {
	return predicate.Place(sql.FieldContainsFold(FieldIcon, v))
}

// ExtratagsIsNil applies the IsNil predicate on the "extratags" field.
func ExtratagsIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldExtratags))
}

// ExtratagsNotNil applies the NotNil predicate on the "extratags" field.
func ExtratagsNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldExtratags))
}

// NamedetailsIsNil applies the IsNil predicate on the "namedetails" field.
func NamedetailsIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldNamedetails))
}

// NamedetailsNotNil applies the NotNil predicate on the "namedetails" field.
func NamedetailsNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldNamedetails))
}

// PolygonGeojsonEQ applies the EQ predicate on the "polygon_geojson" field.
func PolygonGeojsonEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldEQ(FieldPolygonGeojson, v))
}

// PolygonGeojsonNEQ applies the NEQ predicate on the "polygon_geojson" field.
func PolygonGeojsonNEQ(v string) predicate.Place {
	return predicate.Place(sql.FieldNEQ(FieldPolygonGeojson, v))
}

// PolygonGeojsonIn applies the In predicate on the "polygon_geojson" field.
func PolygonGeojsonIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldIn(FieldPolygonGeojson, vs...))
}

// PolygonGeojsonNotIn applies the NotIn predicate on the "polygon_geojson" field.
func PolygonGeojsonNotIn(vs ...string) predicate.Place {
	return predicate.Place(sql.FieldNotIn(FieldPolygonGeojson, vs...))
}

// PolygonGeojsonGT applies the GT predicate on the "polygon_geojson" field.
func PolygonGeojsonGT(v string) predicate.Place {
	return predicate.Place(sql.FieldGT(FieldPolygonGeojson, v))
}

// PolygonGeojsonGTE applies the GTE predicate on the "polygon_geojson" field.
func PolygonGeojsonGTE(v string) predicate.Place {
	return predicate.Place(sql.FieldGTE(FieldPolygonGeojson, v))
}

// PolygonGeojsonLT applies the LT predicate on the "polygon_geojson" field.
func PolygonGeojsonLT(v string) predicate.Place {
	return predicate.Place(sql.FieldLT(FieldPolygonGeojson, v))
}

// PolygonGeojsonLTE applies the LTE predicate on the "polygon_geojson" field.
func PolygonGeojsonLTE(v string) predicate.Place {
	return predicate.Place(sql.FieldLTE(FieldPolygonGeojson, v))
}

// PolygonGeojsonContains applies the Contains predicate on the "polygon_geojson" field.
func PolygonGeojsonContains(v string) predicate.Place {
	return predicate.Place(sql.FieldContains(FieldPolygonGeojson, v))
}

// PolygonGeojsonHasPrefix applies the HasPrefix predicate on the "polygon_geojson" field.
func PolygonGeojsonHasPrefix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasPrefix(FieldPolygonGeojson, v))
}

// PolygonGeojsonHasSuffix applies the HasSuffix predicate on the "polygon_geojson" field.
func PolygonGeojsonHasSuffix(v string) predicate.Place {
	return predicate.Place(sql.FieldHasSuffix(FieldPolygonGeojson, v))
}

// PolygonGeojsonIsNil applies the IsNil predicate on the "polygon_geojson" field.
func PolygonGeojsonIsNil() predicate.Place {
	return predicate.Place(sql.FieldIsNull(FieldPolygonGeojson))
}

// PolygonGeojsonNotNil applies the NotNil predicate on the "polygon_geojson" field.
func PolygonGeojsonNotNil() predicate.Place {
	return predicate.Place(sql.FieldNotNull(FieldPolygonGeojson))
}

// PolygonGeojsonEqualFold applies the EqualFold predicate on the "polygon_geojson" field.
func PolygonGeojsonEqualFold(v string) predicate.Place {
	return predicate.Place(sql.FieldEqualFold(FieldPolygonGeojson, v))
}

// PolygonGeojsonContainsFold applies the ContainsFold predicate on the "polygon_geojson" field.
func PolygonGeojsonContainsFold(v string) predicate.Place {
	return predicate.Place(sql.FieldContainsFold(FieldPolygonGeojson, v))
}

// HasAddressRows applies the HasEdge predicate on the "address_rows" edge.
func HasAddressRows() predicate.Place {
	return predicate.Place(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, AddressRowsTable, AddressRowsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAddressRowsWith applies the HasEdge predicate on the "address_rows" edge with a given conditions (other predicates).
func HasAddressRowsWith(preds ...predicate.AddressRow) predicate.Place {
	return predicate.Place(func(s *sql.Selector) {
		step := newAddressRowsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Place) predicate.Place {
	return predicate.Place(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Place) predicate.Place {
	return predicate.Place(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Place) predicate.Place {
	return predicate.Place(sql.NotPredicates(p))
}
